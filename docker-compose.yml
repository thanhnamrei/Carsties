networks:
  custom:
    ipam:
      config:
        - subnet: 10.5.0.0/16
services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      custom:
  mongodb:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data
    networks:
      custom:
  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      custom:
  auction-svc:
    image: auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=auction
      - IdentityServiceUrl=http://identity-svc
      - Kestrel__Endpoints__Grpc__Protocols=http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq
    networks:
      custom:
  search-svc:
    image: search-svc:latest
    build: 
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - IdentityServiceUrl=http://identity-svc
    ports:
      - 7002:80
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      custom:
  identity-svc:
    image: identity-svc:latest
    build: 
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=http://app.carsties.com
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;User Id=postgres;Password=postgrespw;Database=identity
      - VIRTUAL_HOST=identity.carsties.com
    depends_on:
      - postgres
    networks:
      custom:
        ipv4_address: 10.5.0.200
  gateway-svc:
    image: gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
      - ClientApp=http://app.carsties.com
      - VIRTUAL_HOST=api.carsties.com
    networks:
      custom:
  bid-svc:
    image: bid-svc:latest
    build: 
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@mongodb
      - IdentityServiceUrl=http://identity-svc
      - GrpcAuction=http://auction-svc:7777
    ports:
      - 7003:80
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      custom:
  notify-svc:
    image: notify-svc:latest
    build: 
      context: .
      dockerfile: src/NotificationService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq
    networks:
      custom:
  web-app:
    image: web-app:latest
    build: 
      context: .
      dockerfile: frontend/web-app/Dockerfile
    # volumes:
    #   - var/lib/web/data
    environment:
      - NEXTAUTH_SECRET=abcdaxkdkd
      - NEXTAUTH_URL=http://app.carsties.com
      - NEXTAUTH_URL_INTERNAL=http://web-app:3000
      - API_URL=http://gateway-svc/
      - ID_URL=http://identity.carsties.com
      - NEXT_PUBLIC_NOTIFY_URL=http://gateway-svc/notifications
      - VIRTUAL_HOST=app.carsties.com
      - VIRTUAL_PORT=3000
    extra_hosts:
      - identity.carsties.com:10.5.0.200
    networks:
      custom:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
    networks:
      custom:
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
volumes:
  pgdata:
  mongodata: